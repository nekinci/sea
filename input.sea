package p

struct Node {
    i32 value
    Node* next
}

impl Node {

    fun i32 get_value() {
        return this.value
    }

    fun Node* next_node() {
        return this.next
    }

    fun bool has_next() {
        return this.next != nil
    }

    fun Node* add_next(i32 value) {
        this.next = &Node{
            value: value,
            next: nil
        }
        return this.next
    }

}


fun Node* new_node(i32 value) {
    var Node* node = &Node{
        value: value,
        next: nil
    }
    return node
}

fun void print_values(Node* node, i32 depth) {

     printf_internal("%d\n", node.value)
     print_values(node.next, depth + 1)
     return

}


# main function
fun i32 main(i32 arg) {
    var Node* linked_list = new_node(1)
    linked_list.add_next(2)
        .add_next(3)
        .add_next(4)
        .add_next(5)
    print_values(linked_list, 0)
    return 0
}
